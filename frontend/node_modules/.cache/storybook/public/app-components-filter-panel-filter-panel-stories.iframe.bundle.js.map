{"version":3,"file":"app-components-filter-panel-filter-panel-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACvjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://data-analysis-frontend/./src/app/components/filter-panel/filter-panel.component.ts","webpack://data-analysis-frontend/./src/app/services/data.service.ts","webpack://data-analysis-frontend/","webpack://data-analysis-frontend/./src/app/components/filter-panel/filter-panel.component.ts?0b0f"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"/home/a-tsu/data-analysys-by-claude/frontend/src/app/components/filter-panel/filter-panel.component.ts.scss?ngResource!=!/home/a-tsu/data-analysys-by-claude/frontend/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAuZmlsdGVyLXBhbmVsIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIG1heC13aWR0aDogMzIwcHg7CiAgICB9CgogICAgLmZpbHRlci1zZWN0aW9uIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDsKICAgIH0KCiAgICAuZmlsdGVyLXNlY3Rpb24gaDMgewogICAgICBtYXJnaW46IDAgMCAxMnB4IDA7CiAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgIH0KCiAgICBtYXQtZm9ybS1maWVsZCB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBtYXJnaW4tYm90dG9tOiA4cHg7CiAgICB9CgogICAgbWF0LXNsaWRlciB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBtYXJnaW46IDhweCAwOwogICAgfQoKICAgIC5yYW5nZS1kaXNwbGF5IHsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIGNvbG9yOiAjNjY2OwogICAgICBtYXJnaW4tdG9wOiA0cHg7CiAgICB9CgogICAgbWF0LWNoZWNrYm94IHsKICAgICAgbWFyZ2luLWJvdHRvbTogOHB4OwogICAgfQoKICAgIG1hdC1jYXJkLWNvbnRlbnQgewogICAgICBwYWRkaW5nOiAxNnB4OwogICAgfQogIA%3D%3D!/home/a-tsu/data-analysys-by-claude/frontend/src/app/components/filter-panel/filter-panel.component.ts\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DataService } from '../../services/data.service';\nlet FilterPanelComponent = class FilterPanelComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.filterOptions = null;\n        this.selectAllCategories = true;\n        this.selectAllRegions = true;\n        this.filters = {\n            date_range: ['2024-01-01', '2024-12-31'],\n            categories: [],\n            regions: [],\n            sales_range: [0, 100000],\n            age_range: [18, 80],\n            genders: [],\n            satisfaction_filter: ''\n        };\n    }\n    ngOnInit() {\n        this.loadFilterOptions();\n    }\n    loadFilterOptions() {\n        this.dataService.getFilterOptions().subscribe(options => {\n            this.filterOptions = options;\n            this.initializeFilters();\n        });\n    }\n    initializeFilters() {\n        if (this.filterOptions) {\n            this.filters = {\n                date_range: ['2024-01-01', '2024-12-31'],\n                categories: [...this.filterOptions.categories],\n                regions: [...this.filterOptions.regions],\n                sales_range: [...this.filterOptions.sales_range],\n                age_range: [...this.filterOptions.age_range],\n                genders: [...this.filterOptions.genders],\n                satisfaction_filter: ''\n            };\n            this.onFiltersChange();\n        }\n    }\n    onSelectAllCategories() {\n        if (this.selectAllCategories && this.filterOptions) {\n            this.filters.categories = [...this.filterOptions.categories];\n        }\n        else {\n            this.filters.categories = [];\n        }\n        this.onFiltersChange();\n    }\n    onSelectAllRegions() {\n        if (this.selectAllRegions && this.filterOptions) {\n            this.filters.regions = [...this.filterOptions.regions];\n        }\n        else {\n            this.filters.regions = [];\n        }\n        this.onFiltersChange();\n    }\n    onFiltersChange() {\n        this.dataService.updateFilters(this.filters);\n    }\n    formatSales(value) {\n        return `¥${value.toLocaleString()}`;\n    }\n    static { this.ctorParameters = () => [\n        { type: DataService }\n    ]; }\n};\nFilterPanelComponent = __decorate([\n    Component({\n        selector: 'app-filter-panel',\n        standalone: true,\n        imports: [\n            CommonModule,\n            FormsModule,\n            MatCardModule,\n            MatFormFieldModule,\n            MatInputModule,\n            MatSelectModule,\n            MatSliderModule,\n            MatCheckboxModule,\n            MatButtonModule,\n            MatIconModule\n        ],\n        template: `\n    <div class=\"filter-panel\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>filter_list</mat-icon>\n            フィルター設定\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          \n          <!-- 期間設定 -->\n          <div class=\"filter-section\">\n            <h3>📅 期間設定</h3>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>開始日</mat-label>\n              <input matInput type=\"date\" [(ngModel)]=\"filters.date_range![0]\" (change)=\"onFiltersChange()\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>終了日</mat-label>\n              <input matInput type=\"date\" [(ngModel)]=\"filters.date_range![1]\" (change)=\"onFiltersChange()\">\n            </mat-form-field>\n          </div>\n\n          <!-- カテゴリ設定 -->\n          <div class=\"filter-section\">\n            <h3>🏷️ カテゴリ設定</h3>\n            <mat-checkbox \n              [(ngModel)]=\"selectAllCategories\" \n              (change)=\"onSelectAllCategories()\">\n              全カテゴリを選択\n            </mat-checkbox>\n            <mat-form-field appearance=\"outline\" *ngIf=\"!selectAllCategories\">\n              <mat-label>カテゴリを選択</mat-label>\n              <mat-select multiple [(ngModel)]=\"filters.categories\" (selectionChange)=\"onFiltersChange()\">\n                <mat-option *ngFor=\"let category of filterOptions?.categories\" [value]=\"category\">\n                  {{category}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n          <!-- 地域設定 -->\n          <div class=\"filter-section\">\n            <h3>🗺️ 地域設定</h3>\n            <mat-checkbox \n              [(ngModel)]=\"selectAllRegions\" \n              (change)=\"onSelectAllRegions()\">\n              全地域を選択\n            </mat-checkbox>\n            <mat-form-field appearance=\"outline\" *ngIf=\"!selectAllRegions\">\n              <mat-label>地域を選択</mat-label>\n              <mat-select multiple [(ngModel)]=\"filters.regions\" (selectionChange)=\"onFiltersChange()\">\n                <mat-option *ngFor=\"let region of filterOptions?.regions\" [value]=\"region\">\n                  {{region}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n          <!-- 売上範囲 -->\n          <div class=\"filter-section\">\n            <h3>💰 売上範囲</h3>\n            <mat-slider\n              min=\"0\"\n              [max]=\"filterOptions?.sales_range?.[1] || 100000\"\n              step=\"10000\"\n              discrete\n              [displayWith]=\"formatSales\">\n              <input matSliderStartThumb [(ngModel)]=\"filters.sales_range![0]\" (ngModelChange)=\"onFiltersChange()\">\n              <input matSliderEndThumb [(ngModel)]=\"filters.sales_range![1]\" (ngModelChange)=\"onFiltersChange()\">\n            </mat-slider>\n            <div class=\"range-display\">\n              ¥{{filters.sales_range![0] | number}} - ¥{{filters.sales_range![1] | number}}\n            </div>\n          </div>\n\n          <!-- 年齢範囲 -->\n          <div class=\"filter-section\">\n            <h3>👥 年齢範囲</h3>\n            <mat-slider\n              min=\"18\"\n              max=\"80\"\n              step=\"1\"\n              discrete>\n              <input matSliderStartThumb [(ngModel)]=\"filters.age_range![0]\" (ngModelChange)=\"onFiltersChange()\">\n              <input matSliderEndThumb [(ngModel)]=\"filters.age_range![1]\" (ngModelChange)=\"onFiltersChange()\">\n            </mat-slider>\n            <div class=\"range-display\">\n              {{filters.age_range![0]}}歳 - {{filters.age_range![1]}}歳\n            </div>\n          </div>\n\n          <!-- 性別 -->\n          <div class=\"filter-section\">\n            <h3>👤 性別</h3>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>性別を選択</mat-label>\n              <mat-select multiple [(ngModel)]=\"filters.genders\" (selectionChange)=\"onFiltersChange()\">\n                <mat-option *ngFor=\"let gender of filterOptions?.genders\" [value]=\"gender\">\n                  {{gender}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n          <!-- 満足度 -->\n          <div class=\"filter-section\">\n            <h3>⭐ 満足度フィルター</h3>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>満足度</mat-label>\n              <mat-select [(ngModel)]=\"filters.satisfaction_filter\" (selectionChange)=\"onFiltersChange()\">\n                <mat-option value=\"\">全て</mat-option>\n                <mat-option value=\"高満足度 (4-5)\">高満足度 (4-5)</mat-option>\n                <mat-option value=\"中満足度 (3)\">中満足度 (3)</mat-option>\n                <mat-option value=\"低満足度 (1-2)\">低満足度 (1-2)</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n        styles: [__NG_CLI_RESOURCE__0]\n    })\n], FilterPanelComponent);\nexport { FilterPanelComponent };\n","import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nlet DataService = class DataService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = 'http://localhost:8000/api';\n        this.filtersSubject = new BehaviorSubject({});\n        this.filters$ = this.filtersSubject.asObservable();\n    }\n    getFilterOptions() {\n        return this.http.get(`${this.apiUrl}/filter-options`);\n    }\n    getSalesData(filters) {\n        return this.http.post(`${this.apiUrl}/sales`, filters);\n    }\n    getCustomerData(filters) {\n        return this.http.post(`${this.apiUrl}/customers`, filters);\n    }\n    getMetrics(filters) {\n        return this.http.post(`${this.apiUrl}/metrics`, filters);\n    }\n    getChartData(filters) {\n        return this.http.post(`${this.apiUrl}/chart-data`, filters);\n    }\n    updateFilters(filters) {\n        this.filtersSubject.next(filters);\n    }\n    getCurrentFilters() {\n        return this.filtersSubject.value;\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nDataService = __decorate([\n    Injectable({\n        providedIn: 'root'\n    })\n], DataService);\nexport { DataService };\n",null,"// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.filter-panel {\n  width: 100%;\n  max-width: 320px;\n}\n\n.filter-section {\n  margin-bottom: 24px;\n}\n\n.filter-section h3 {\n  margin: 0 0 12px 0;\n  font-size: 16px;\n  font-weight: 500;\n}\n\nmat-form-field {\n  width: 100%;\n  margin-bottom: 8px;\n}\n\nmat-slider {\n  width: 100%;\n  margin: 8px 0;\n}\n\n.range-display {\n  text-align: center;\n  font-size: 12px;\n  color: #666;\n  margin-top: 4px;\n}\n\nmat-checkbox {\n  margin-bottom: 8px;\n}\n\nmat-card-content {\n  padding: 16px;\n}`, \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":[],"sourceRoot":""}