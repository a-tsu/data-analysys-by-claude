{"version":3,"file":"app-components-charts-charts-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://data-analysis-frontend/./src/app/components/charts/charts.component.ts","webpack://data-analysis-frontend/","webpack://data-analysis-frontend/./src/app/components/charts/charts.component.ts?7687"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"/home/a-tsu/data-analysys-by-claude/frontend/src/app/components/charts/charts.component.ts.scss?ngResource!=!/home/a-tsu/data-analysys-by-claude/frontend/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAuY2hhcnRzLWNvbnRhaW5lciB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgfQoKICAgIC5jaGFydHMtcm93IHsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMWZyOwogICAgICBnYXA6IDE2cHg7CiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7CiAgICB9CgogICAgLmNoYXJ0cy1ib3R0b20tcm93IHsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyOwogICAgICBnYXA6IDE2cHg7CiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7CiAgICB9CgogICAgLmNoYXJ0LWNhcmQgewogICAgICBtaW4taGVpZ2h0OiA0MDBweDsKICAgIH0KCiAgICAuY2hhcnQtY2FyZC5sYXJnZSB7CiAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4OwogICAgfQoKICAgIC5jaGFydC13cmFwcGVyIHsKICAgICAgaGVpZ2h0OiAzMDBweDsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgfQoKICAgIG1hdC1jYXJkLWNvbnRlbnQgewogICAgICBwYWRkaW5nOiAxNnB4OwogICAgfQoKICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogICAgICAuY2hhcnRzLXJvdywKICAgICAgLmNoYXJ0cy1ib3R0b20tcm93IHsKICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjsKICAgICAgfQogICAgfQogIA%3D%3D!/home/a-tsu/data-analysys-by-claude/frontend/src/app/components/charts/charts.component.ts\";\nimport { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgChartsModule } from 'ng2-charts';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nlet ChartsComponent = class ChartsComponent {\n    constructor() {\n        this.chartData = null;\n        // Line Chart\n        this.lineChartType = 'line';\n        this.lineChartData = {\n            labels: [],\n            datasets: [{\n                    data: [],\n                    label: '売上',\n                    borderColor: '#1976d2',\n                    backgroundColor: 'rgba(25, 118, 210, 0.1)',\n                    fill: true,\n                    tension: 0.1\n                }]\n        };\n        this.lineChartOptions = {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                y: {\n                    beginAtZero: true,\n                    ticks: {\n                        callback: (value) => '¥' + Number(value).toLocaleString()\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                }\n            }\n        };\n        // Pie Chart\n        this.pieChartType = 'pie';\n        this.pieChartData = {\n            labels: [],\n            datasets: [{\n                    data: [],\n                    backgroundColor: [\n                        '#FF6384',\n                        '#36A2EB',\n                        '#FFCE56',\n                        '#4BC0C0',\n                        '#9966FF',\n                        '#FF9F40'\n                    ]\n                }]\n        };\n        this.pieChartOptions = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                legend: {\n                    position: 'bottom'\n                }\n            }\n        };\n        // Bar Chart\n        this.barChartType = 'bar';\n        this.barChartData = {\n            labels: [],\n            datasets: [{\n                    data: [],\n                    label: '売上',\n                    backgroundColor: '#1976d2',\n                    borderColor: '#1565c0',\n                    borderWidth: 1\n                }]\n        };\n        this.barChartOptions = {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                y: {\n                    beginAtZero: true,\n                    ticks: {\n                        callback: (value) => '¥' + Number(value).toLocaleString()\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                }\n            }\n        };\n        // Histogram Chart\n        this.histogramChartType = 'bar';\n        this.histogramChartData = {\n            labels: [],\n            datasets: [{\n                    data: [],\n                    label: '人数',\n                    backgroundColor: '#4caf50',\n                    borderColor: '#388e3c',\n                    borderWidth: 1\n                }]\n        };\n        this.histogramChartOptions = {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                y: {\n                    beginAtZero: true\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                }\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (changes['chartData'] && this.chartData) {\n            this.updateCharts();\n        }\n    }\n    updateCharts() {\n        if (!this.chartData)\n            return;\n        // Line Chart\n        this.lineChartData = {\n            labels: this.chartData.line_chart.map(d => d.x),\n            datasets: [{\n                    data: this.chartData.line_chart.map(d => d.y),\n                    label: '売上',\n                    borderColor: '#1976d2',\n                    backgroundColor: 'rgba(25, 118, 210, 0.1)',\n                    fill: true,\n                    tension: 0.1\n                }]\n        };\n        // Pie Chart\n        this.pieChartData = {\n            labels: this.chartData.pie_chart.map(d => d.x),\n            datasets: [{\n                    data: this.chartData.pie_chart.map(d => d.y),\n                    backgroundColor: [\n                        '#FF6384',\n                        '#36A2EB',\n                        '#FFCE56',\n                        '#4BC0C0',\n                        '#9966FF',\n                        '#FF9F40'\n                    ]\n                }]\n        };\n        // Bar Chart\n        this.barChartData = {\n            labels: this.chartData.bar_chart.map(d => d.x),\n            datasets: [{\n                    data: this.chartData.bar_chart.map(d => d.y),\n                    label: '売上',\n                    backgroundColor: '#1976d2',\n                    borderColor: '#1565c0',\n                    borderWidth: 1\n                }]\n        };\n        // Histogram\n        if (this.chartData.histogram.length > 0) {\n            const bins = this.createHistogramBins(this.chartData.histogram);\n            this.histogramChartData = {\n                labels: bins.labels,\n                datasets: [{\n                        data: bins.data,\n                        label: '人数',\n                        backgroundColor: '#4caf50',\n                        borderColor: '#388e3c',\n                        borderWidth: 1\n                    }]\n            };\n        }\n    }\n    createHistogramBins(ages) {\n        const bins = {};\n        const binSize = 5;\n        ages.forEach(age => {\n            const binStart = Math.floor(age / binSize) * binSize;\n            const binEnd = binStart + binSize - 1;\n            const binLabel = `${binStart}-${binEnd}`;\n            bins[binLabel] = (bins[binLabel] || 0) + 1;\n        });\n        return {\n            labels: Object.keys(bins),\n            data: Object.values(bins)\n        };\n    }\n    static { this.propDecorators = {\n        chartData: [{ type: Input }]\n    }; }\n};\nChartsComponent = __decorate([\n    Component({\n        selector: 'app-charts',\n        standalone: true,\n        imports: [CommonModule, MatCardModule, NgChartsModule],\n        template: `\n    <div class=\"charts-container\">\n      <!-- 売上推移とカテゴリ別売上 -->\n      <div class=\"charts-row\">\n        <mat-card class=\"chart-card large\">\n          <mat-card-header>\n            <mat-card-title>📈 売上推移</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-wrapper\">\n              <canvas\n                baseChart\n                [data]=\"lineChartData\"\n                [options]=\"lineChartOptions\"\n                [type]=\"lineChartType\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"chart-card\">\n          <mat-card-header>\n            <mat-card-title>🥧 カテゴリ別売上構成</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-wrapper\">\n              <canvas\n                baseChart\n                [data]=\"pieChartData\"\n                [options]=\"pieChartOptions\"\n                [type]=\"pieChartType\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!-- 地域別売上と顧客年齢分布 -->\n      <div class=\"charts-bottom-row\">\n        <mat-card class=\"chart-card\">\n          <mat-card-header>\n            <mat-card-title>🗺️ 地域別売上</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-wrapper\">\n              <canvas\n                baseChart\n                [data]=\"barChartData\"\n                [options]=\"barChartOptions\"\n                [type]=\"barChartType\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"chart-card\">\n          <mat-card-header>\n            <mat-card-title>👥 顧客年齢分布</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-wrapper\">\n              <canvas\n                baseChart\n                [data]=\"histogramChartData\"\n                [options]=\"histogramChartOptions\"\n                [type]=\"histogramChartType\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  `,\n        styles: [__NG_CLI_RESOURCE__0]\n    })\n], ChartsComponent);\nexport { ChartsComponent };\n",null,"// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.charts-container {\n  width: 100%;\n}\n\n.charts-row {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.charts-bottom-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.chart-card {\n  min-height: 400px;\n}\n\n.chart-card.large {\n  min-height: 400px;\n}\n\n.chart-wrapper {\n  height: 300px;\n  position: relative;\n}\n\nmat-card-content {\n  padding: 16px;\n}\n\n@media (max-width: 768px) {\n  .charts-row,\n  .charts-bottom-row {\n    grid-template-columns: 1fr;\n  }\n}`, \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":[],"sourceRoot":""}