{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nlet DataService = class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api';\n    this.filtersSubject = new BehaviorSubject({});\n    this.filters$ = this.filtersSubject.asObservable();\n  }\n  getFilterOptions() {\n    return this.http.get(`${this.apiUrl}/filter-options`);\n  }\n  getSalesData(filters) {\n    return this.http.post(`${this.apiUrl}/sales`, filters);\n  }\n  getCustomerData(filters) {\n    return this.http.post(`${this.apiUrl}/customers`, filters);\n  }\n  getMetrics(filters) {\n    return this.http.post(`${this.apiUrl}/metrics`, filters);\n  }\n  getChartData(filters) {\n    return this.http.post(`${this.apiUrl}/chart-data`, filters);\n  }\n  updateFilters(filters) {\n    this.filtersSubject.next(filters);\n  }\n  getCurrentFilters() {\n    return this.filtersSubject.value;\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: HttpClient\n    }];\n  }\n};\nDataService = __decorate([Injectable({\n  providedIn: 'root'\n})], DataService);\nexport { DataService };","map":{"version":3,"names":["__decorate","Injectable","HttpClient","BehaviorSubject","DataService","constructor","http","apiUrl","filtersSubject","filters$","asObservable","getFilterOptions","get","getSalesData","filters","post","getCustomerData","getMetrics","getChartData","updateFilters","next","getCurrentFilters","value","ctorParameters","type","providedIn"],"sources":["/home/a-tsu/data-analysys-by-claude/frontend/src/app/services/data.service.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nlet DataService = class DataService {\n    constructor(http) {\n        this.http = http;\n        this.apiUrl = 'http://localhost:8000/api';\n        this.filtersSubject = new BehaviorSubject({});\n        this.filters$ = this.filtersSubject.asObservable();\n    }\n    getFilterOptions() {\n        return this.http.get(`${this.apiUrl}/filter-options`);\n    }\n    getSalesData(filters) {\n        return this.http.post(`${this.apiUrl}/sales`, filters);\n    }\n    getCustomerData(filters) {\n        return this.http.post(`${this.apiUrl}/customers`, filters);\n    }\n    getMetrics(filters) {\n        return this.http.post(`${this.apiUrl}/metrics`, filters);\n    }\n    getChartData(filters) {\n        return this.http.post(`${this.apiUrl}/chart-data`, filters);\n    }\n    updateFilters(filters) {\n        this.filtersSubject.next(filters);\n    }\n    getCurrentFilters() {\n        return this.filtersSubject.value;\n    }\n    static { this.ctorParameters = () => [\n        { type: HttpClient }\n    ]; }\n};\nDataService = __decorate([\n    Injectable({\n        providedIn: 'root'\n    })\n], DataService);\nexport { DataService };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,eAAe,QAAQ,MAAM;AACtC,IAAIC,WAAW,GAAG,MAAMA,WAAW,CAAC;EAChCC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAG,2BAA2B;IACzC,IAAI,CAACC,cAAc,GAAG,IAAIL,eAAe,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACM,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACE,YAAY,CAAC,CAAC;EACtD;EACAC,gBAAgBA,CAAA,EAAG;IACf,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAE,GAAE,IAAI,CAACL,MAAO,iBAAgB,CAAC;EACzD;EACAM,YAAYA,CAACC,OAAO,EAAE;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,QAAO,EAAEO,OAAO,CAAC;EAC1D;EACAE,eAAeA,CAACF,OAAO,EAAE;IACrB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,YAAW,EAAEO,OAAO,CAAC;EAC9D;EACAG,UAAUA,CAACH,OAAO,EAAE;IAChB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,UAAS,EAAEO,OAAO,CAAC;EAC5D;EACAI,YAAYA,CAACJ,OAAO,EAAE;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,aAAY,EAAEO,OAAO,CAAC;EAC/D;EACAK,aAAaA,CAACL,OAAO,EAAE;IACnB,IAAI,CAACN,cAAc,CAACY,IAAI,CAACN,OAAO,CAAC;EACrC;EACAO,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACb,cAAc,CAACc,KAAK;EACpC;EACA;IAAS,IAAI,CAACC,cAAc,GAAG,MAAM,CACjC;MAAEC,IAAI,EAAEtB;IAAW,CAAC,CACvB;EAAE;AACP,CAAC;AACDE,WAAW,GAAGJ,UAAU,CAAC,CACrBC,UAAU,CAAC;EACPwB,UAAU,EAAE;AAChB,CAAC,CAAC,CACL,EAAErB,WAAW,CAAC;AACf,SAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}